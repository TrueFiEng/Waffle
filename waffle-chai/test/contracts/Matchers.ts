export const MATCHERS_SOURCE = `
  pragma solidity ^0.8.0;

  contract Matchers {
    uint counter;

    function doNothing() public pure {

    }

    function doModify() public {
      counter += 1;
    }

    function doThrow() public pure {
      assert(false);
    }

    function doRevert() public pure {
      revert("Revert cause");
    }

    function doPanic() public pure {
      uint d = 0;
      uint x = 1 / d;
    }

    function doRevertWithComplexReason() public pure {
      revert("Revert cause (with complex reason)");
    }

    function doRequireFail() public pure {
      require(false, "Require cause");
    }

    function doRequireSuccess() public pure {
      require(true, "Never to be seen");
    }

    function doThrowAndModify() public {
      counter += 1;
      assert(false);
    }

    function doRevertAndModify() public {
      counter += 1;
      revert("Revert cause");
    }

    function doRequireFailAndModify() public {
      counter += 1;
      require(false, "Require cause");
    }
  }
`;

export const MATCHERS_ABI = [
  {
    inputs: [],
    name: 'doModify',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doNothing',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doPanic',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doRequireFail',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doRequireFailAndModify',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doRequireSuccess',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doRevert',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doRevertAndModify',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doRevertWithComplexReason',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doThrow',
    outputs: [],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'doThrowAndModify',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }
];

// eslint-disable-next-line max-len
export const MATCHERS_BYTECODE = '608060405234801561001057600080fd5b50610671806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063af9b573911610071578063af9b5739146100e0578063afc874d2146100ea578063b217ca11146100f4578063be3e2e60146100fe578063eacf8a5714610108578063fff78f9c14610112576100a9565b806301236db4146100ae5780632f576f20146100b8578063841caf38146100c25780639817185d146100cc578063a6f34dcb146100d6575b600080fd5b6100b661011c565b005b6100c0610170565b005b6100ca610172565b005b6100d461019c565b005b6100de6101b2565b005b6100e861020e565b005b6100f2610249565b005b6100fc610284565b005b61010661029f565b005b6101106102e2565b005b61011a610325565b005b600160008082825461012e9190610453565b925050819055506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610167906103c2565b60405180910390fd5b565b60016000808282546101849190610453565b92505081905550600061019a576101996104e4565b5b565b6000808160016101ac91906104a9565b90505050565b60016000808282546101c49190610453565b92505081905550600061020c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610203906103e2565b60405180910390fd5b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610402565b60405180910390fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b906103c2565b60405180910390fd5b60016000808282546102969190610453565b92505081905550565b60016102e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d790610422565b60405180910390fd5b565b6000610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a906103e2565b60405180910390fd5b565b6000610334576103336104e4565b5b565b6000610343600c83610442565b915061034e82610571565b602082019050919050565b6000610366600d83610442565b91506103718261059a565b602082019050919050565b6000610389602283610442565b9150610394826105c3565b604082019050919050565b60006103ac601083610442565b91506103b782610612565b602082019050919050565b600060208201905081810360008301526103db81610336565b9050919050565b600060208201905081810360008301526103fb81610359565b9050919050565b6000602082019050818103600083015261041b8161037c565b9050919050565b6000602082019050818103600083015261043b8161039f565b9050919050565b600082825260208201905092915050565b600061045e826104da565b9150610469836104da565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561049e5761049d610513565b5b828201905092915050565b60006104b4826104da565b91506104bf836104da565b9250826104cf576104ce610542565b5b828204905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f5265766572742063617573650000000000000000000000000000000000000000600082015250565b7f5265717569726520636175736500000000000000000000000000000000000000600082015250565b7f52657665727420636175736520287769746820636f6d706c657820726561736f60008201527f6e29000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6576657220746f206265207365656e0000000000000000000000000000000060008201525056fea26469706673582212200d6f653037fb208b2c580e808f575116267849837dff0eb0b0e67eb37bed45f464736f6c63430008070033';
